AWSTemplateFormatVersion: '2010-09-09'
Description: Infosec Security Audit, Incident Response and GuardDuty Member Roles
Metadata:
  Source: https://github.com/mozilla/security/tree/master/operations/aws-security-roles/infosec-security-audit-incident-response-guardduty-roles-cloudformation.yml
  URL: https://s3.us-west-2.amazonaws.com/public.us-west-2.infosec.mozilla.org/infosec-security-roles/cf/infosec-security-audit-incident-response-guardduty-roles-cloudformation.yml
  TemplateVersion: 3.1.0
Parameters:
  EmailAddress:
    Type: String
    Default: ''
    Description: An optional email address to subscribe to notifications of use of the Incident Response role
Mappings:
  Variables:
    SNSTopicForPublishingStackOutput:
      Account: 371522382791
      Topic: cloudformation-stack-emissions
    TrustedEISAccount:
      AccountId: 415589142697
    AllowedSNSSubscriber:
      AccountId: 371522382791
    GuardDutyMasterAccount:
      Principal: arn:aws:iam::371522382791:root
  TheRegionYouAreDeployingIn:
    us-west-2:
      WhatIsThisMapping: This constrains the regions in which you can deploy this template to only the regions listed in this mapping. This, for example, prevents deploying in ap-south-1
      IsNotSupportedPleaseUseADifferentRegion: True
    us-east-1:
      WhatIsThisMapping: ''
      IsNotSupportedPleaseUseADifferentRegion: True
    us-west-1:
      WhatIsThisMapping: ''
      IsNotSupportedPleaseUseADifferentRegion: True
    eu-west-1:
      WhatIsThisMapping: ''
      IsNotSupportedPleaseUseADifferentRegion: True
Conditions:
  EmailAddressIsPresent: !Not [ !Equals [ !Ref EmailAddress, '' ] ]
  RunningInAllowedRegion: !Equals [ !FindInMap [ TheRegionYouAreDeployingIn, !Ref 'AWS::Region', IsNotSupportedPleaseUseADifferentRegion ] , True ]
Resources:
  InfosecSecurityAuditRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: ''
            Effect: Allow
            Principal:
              AWS: arn:aws:iam::371522382791:root
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/SecurityAudit
      Policies:
        - PolicyName: PreMigrationAWSPortalViewAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - aws-portal:View*
                Effect: Allow
                Resource: '*'
        - PolicyName: MozillaSecurityAuditAugmentation
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - awsbillingconsole:View*
                  - cloudformation:Describe*
                  - cloudformation:Get*
                  - cloudformation:List*
                  - cloudtrail:Describe*
                  - cloudtrail:Get*
                  - cloudtrail:List*
                  - cloudwatch:Get*
                  - cloudwatch:List*
                  - dynamodb:Describe*
                  - dynamodb:List*
                  - elasticmapreduce:List*
                  - es:Get*
                  - es:List*
                  - glacier:Describe*
                  - glacier:List*
                  - s3:List*
                  - ses:Get*
                  - ses:List*
                  - sqs:Get*
                  - storagegateway:Describe*
                Effect: Allow
                Resource: '*'
        - PolicyName: UpdatedPoliciesForAWSPortalViewAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - account:GetAccountInformation
                  - account:GetAlternateContact
                  - account:GetChallengeQuestions
                  - account:GetContactInformation
                  - billing:GetBillingData
                  - billing:GetBillingDetails
                  - billing:GetBillingNotifications
                  - billing:GetBillingPreferences
                  - billing:GetContractInformation
                  - billing:GetCredits
                  - billing:GetIAMAccessPreference
                  - billing:GetSellerOfRecord
                  - billing:ListBillingViews
                  - ce:DescribeNotificationSubscription
                  - ce:DescribeReport
                  - ce:GetAnomalies
                  - ce:GetAnomalyMonitors
                  - ce:GetAnomalySubscriptions
                  - ce:GetCostAndUsage
                  - ce:GetCostAndUsageWithResources
                  - ce:GetCostCategories
                  - ce:GetCostForecast
                  - ce:GetDimensionValues
                  - ce:GetPreferences
                  - ce:GetReservationCoverage
                  - ce:GetReservationPurchaseRecommendation
                  - ce:GetReservationUtilization
                  - ce:GetRightsizingRecommendation
                  - ce:GetSavingsPlansCoverage
                  - ce:GetSavingsPlansPurchaseRecommendation
                  - ce:GetSavingsPlansUtilization
                  - ce:GetSavingsPlansUtilizationDetails
                  - ce:GetTags
                  - ce:GetUsageForecast
                  - ce:ListCostAllocationTags
                  - ce:ListSavingsPlansPurchaseRecommendationGeneration
                  - consolidatedbilling:GetAccountBillingRole
                  - consolidatedbilling:ListLinkedAccounts
                  - cur:GetClassicReport
                  - cur:GetClassicReportPreferences
                  - cur:GetUsageReport
                  - cur:ValidateReportDestination
                  - freetier:GetFreeTierAlertPreference
                  - freetier:GetFreeTierUsage
                  - invoicing:GetInvoiceEmailDeliveryPreferences
                  - invoicing:GetInvoicePDF
                  - invoicing:ListInvoiceSummaries
                  - payments:GetPaymentInstrument
                  - payments:GetPaymentStatus
                  - payments:ListPaymentPreferences
                  - tax:GetTaxInheritance
                  - tax:GetTaxRegistrationDocument
                  - tax:ListTaxRegistrations
                Effect: Allow
                Resource: '*'
  InfosecIncidentResponseRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowEISTrustedToAssume
            Effect: Allow
            Principal:
              AWS: !Join [ '', [ 'arn:aws:iam::', !FindInMap [ Variables, TrustedEISAccount, AccountId ], ':root' ] ]
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess
  BreakGlassTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: Notifications of use of the EIS Incident Response IAM Role
      TopicName: EISIncidentResponseBreakGlass
  BreakGlassTopicPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      Topics:
        - !Ref BreakGlassTopic
      PolicyDocument:
        Version: 2012-10-17
        Id: BreakGlassPolicy
        Statement:
          - Action: sns:Publish
            Principal:
              AWS:
                - !Join [ '', [ 'arn:aws:iam::', !FindInMap [ Variables, TrustedEISAccount, AccountId ], ':root' ] ]
            Resource: !Ref BreakGlassTopic
            Effect: Allow
            Sid: BreakGlassPublisher
          - Action: sns:Publish
            Principal: '*'
            Resource: !Ref BreakGlassTopic
            Effect: Allow
            Sid: BreakGlassServicePublisher
            Condition:
              StringEquals:
                'AWS:SourceAccount': !FindInMap [ Variables, TrustedEISAccount, AccountId ]
          - Action:
              - sns:GetTopicAttributes
              - sns:ListSubscriptionsByTopic
              - sns:Subscribe
            Principal:
              AWS:
                - !Join [ '', [ 'arn:aws:iam::', !FindInMap [ Variables, AllowedSNSSubscriber, AccountId ], ':root' ] ]
                - !Join [ '', [ 'arn:aws:iam::', !FindInMap [ Variables, TrustedEISAccount, AccountId ], ':root' ] ]
            Resource: !Ref BreakGlassTopic
            Effect: Allow
            Sid: BreakGlassSubscriber
  OptionalEmailSubscription:
    Type: "AWS::SNS::Subscription"
    Condition: EmailAddressIsPresent
    Properties:
      Endpoint: !Ref EmailAddress
      Protocol: email
      TopicArn: !Ref BreakGlassTopic
  GuardDutyInvitationAcceptorIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !FindInMap [ Variables, GuardDutyMasterAccount, Principal ]
            Action: sts:AssumeRole
      Policies:
        - PolicyName: AllowAcceptingGuardDutyInvitation
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - guardduty:ListDetectors
                  - guardduty:CreateDetector
                  - guardduty:DeleteDetector
                  - guardduty:AcceptInvitation
                  - guardduty:DeleteInvitations
                  - guardduty:GetDetector
                  - guardduty:GetInvitationsCount
                  - guardduty:GetGuardDutyMasterAccount
                  - guardduty:UpdateDetector
                  - guardduty:ListInvitations
                  - guardduty:DisassociateFromGuardDutyMasterAccount
                Resource: '*'
      Path: '/multi-account-guard-duty/'
  CloudFormationLambdaIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
        - PolicyName: AllowLambdaLoggingAndCreateServiceLinkedRole
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              -
                Effect: Allow
                Action:
                  - logs:*
                  - iam:CreateServiceLinkedRole
                Resource: '*'
  CreateGuardDutyServiceLinkedRoleFunction:
    Type: AWS::Lambda::Function
    DependsOn: CloudFormationLambdaIAMRole
    Properties:
      Code:
        ZipFile: |
            import cfnresponse
            import boto3, secrets, string


            def handler(event, context):
                client = boto3.client('iam')
                created = False
                try:
                    if event['RequestType'] in ['Create', 'Update']:
                        client.create_service_linked_role(
                            AWSServiceName='guardduty.amazonaws.com',
                            Description='A service-linked role required for Amazon '
                                        'GuardDuty to access your resources.'
                        )
                        created = True
                    elif event['RequestType'] == 'Delete':
                        pass  # Leave the role in place when stack is deleted
                except client.exceptions.InvalidInputException:
                    pass  # Role already exists
                if 'PhysicalResourceId' in event:
                    physical_id = event['PhysicalResourceId']
                else:
                    random_string = ''.join(
                        secrets.choice(string.ascii_uppercase + string.digits)
                        for _ in range(13))
                    physical_id = "CreateGuardDutyServiceLinkedRole-{}".format(
                        random_string)
                cfnresponse.send(
                    event, context, cfnresponse.SUCCESS, {'RoleCreated': created},
                    physical_id)
      Handler: index.handler
      Runtime: python3.9
      Role: !GetAtt CloudFormationLambdaIAMRole.Arn
      Timeout: 20
  CreateGuardDutyServiceLinkedRole:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken: !GetAtt CreateGuardDutyServiceLinkedRoleFunction.Arn
  PublishInfosecIncidentResponseInfoToSNS:
    Type: Custom::PublishInfosecIncidentResponseInfoToSNS
    Version: '1.0'
    Properties:
      ServiceToken: !Join [ ':', [ 'arn:aws:sns', !Ref 'AWS::Region', !FindInMap [ Variables, SNSTopicForPublishingStackOutput, Account ], !FindInMap [ Variables, SNSTopicForPublishingStackOutput, Topic ] ] ]
      category: AWS Incident Response Service
      InfosecIncidentResponseRoleArn: !GetAtt InfosecIncidentResponseRole.Arn
      InfosecIncidentResponseRoleName: !Ref InfosecIncidentResponseRole
      BreakGlassSNSTopicArn: !Ref BreakGlassTopic
      BreakGlassSNSTopicName: !GetAtt BreakGlassTopic.TopicName
  PublishInfosecSecurityAuditRoleArnToSNS:
    Type: Custom::PublishInfosecSecurityAuditRoleArnToSNS
    Version: '1.0'
    Properties:
      ServiceToken: !Join [ ':', [ 'arn:aws:sns', !Ref 'AWS::Region', !FindInMap [ Variables, SNSTopicForPublishingStackOutput, Account ], !FindInMap [ Variables, SNSTopicForPublishingStackOutput, Topic ] ] ]
      category: AWS Security Auditing Service
      SecurityAuditIAMRoleArn: !GetAtt InfosecSecurityAuditRole.Arn
      SecurityAuditIAMRoleName: !Ref InfosecSecurityAuditRole
  PublishGuardDutyInvitationAcceptorIAMRoleArnsToSNS:
    Type: Custom::PublishGuardDutyInvitationAcceptorIAMRoleArnsToSNS
    Version: '1.0'
    Properties:
      ServiceToken: !Join [ ':', [ 'arn:aws:sns', !Ref 'AWS::Region', !FindInMap [ Variables, SNSTopicForPublishingStackOutput, Account ], !FindInMap [ Variables, SNSTopicForPublishingStackOutput, Topic ] ] ]
      category: GuardDuty Multi Account Member Role
      GuardDutyMemberAccountIAMRoleArn: !GetAtt GuardDutyInvitationAcceptorIAMRole.Arn
      GuardDutyMemberAccountIAMRoleName: !Ref GuardDutyInvitationAcceptorIAMRole
